on:
  #schedule:
  #  - cron: '30 6 * * *' #0630 UTC kick off full build and regression
  push:
    branches: [ ci* ]
  #workflow_dispatch:
  # inputs:
  #   runTests:
  #    description: "Run tests?"
  #    required: false
  #    type: boolean
  #    default: false

env:
  AWS_REGION: us-east-1
  AWS_SUBNET_ID: subnet-064f21b53fc72cf44
  AWS_SG_ID: sg-0ca7912782cf1538b
  AMI_ID: ami-0b0e38d12eb5ff011
  AWS_INSTANCE_TYPE: c5a.large
  AWS_AVAILABILITY_ZONE: us-east-1b
  OS: linux
  KEY_PAIR: win
  FEBIO_SDK: ./febio-sdk
jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: tundranerd/ec2-multiple-github-runners@multi-os-multi-runner
        with:
          mode: start
          key-pair: ${{ env.KEY_PAIR }}
          os: ${{ env.OS }}
          github-token: ${{ secrets.GH_TOKEN}}
          ec2-image-id: ${{ env.AMI_ID}}
          ec2-instance-type: ${{ env.AWS_INSTANCE_TYPE }}
          subnet-id: ${{ env.AWS_SUBNET_ID }}
          security-group-id: ${{ env.AWS_SG_ID }}
          availability-zone: ${{ env.AWS_AVAILABILITY_ZONE }}
          wait-for-registry-timeout: 5
          aws-resource-tags: > # optional, requires additional permissions
            [
              {"Key": "Name", "Value": "ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"},
              {"Key": "os", "Value": "${{ env.OS }}"}
            ]
  build:
    name: Clone and build
    needs:
      - start-runner # required to get output from the start-runner job
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    outputs:
      git_describe: ${{ steps.git-describe.outputs.git_describe }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'
      - id: git-describe
        run: |
          echo "git_describe=$(git describe --tags)" >> "$GITHUB_OUTPUT"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Fetch latest febio-sdk
        run: |
          ci/common/linux/get-febio-sdk.sh
        env:
          OS: ${{runner.os}}
          FEBIO_SDK_BRANCH: ci/develop
          PACKAGE_NAME: febio
          PACKAGE: febio-sdk-v4.1-82-g3771c50d4.tar.gz
          BUCKET: febio-packages
      - name: Build
        run: |
          ci/linux/build.sh
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: febioheat-${{runner.os}}-${{runner.arch}}
          path: |
            cmbuild/lib
  repo-artifacts:
    name: Upload artifacts to repo
    needs:
      - build # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/download-artifact@v3
        with:
          name: febioheat-${{runner.os}}-${{runner.arch}}
          path: |
            cmbuild
      - name: Configure SSH
        run: |
          ci/common/linux/configure-ssh.sh
        env:
          SSH_USER: ${{ secrets.REPO_USER }}
          SSH_KEY: ${{ secrets.REPO_KEY }}
          SSH_HOST: ${{ secrets.REPO_HOST }}
      - name: Stage Build to Repo
        run: |
          scp cmbuild/* repo:~/update2/FEBioStudio2Dev/Linux/stage/lib
      - name: Make Dev Release
        run: |
          ssh repo "python3 update2/FEBioStudio2Dev/makeDevRelease.py -l"
  publish-to-s3:
    name: Publish to S3
    needs:
      - build
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Download febio
        uses: actions/download-artifact@v3
        with:
          name: febio4-${{runner.os}}-${{runner.arch}}
          path: |
            artifacts/febioheat
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Publish to S3
        env:
          BUCKET_NAME: febio-packages
          OS: ${{ env.os }}
          REF_NAME: ${{ github.ref_name}}
          PACKAGE_NAME: febioheat
          GIT_TAG: ${{ needs.build.outputs.git_describe }}
        run: |
          ci/linux/publish-to-s3.sh artifacts/febioheat
  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - build # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Stop EC2 runner
        uses: tundranerd/ec2-multiple-github-runners@multi-os-multi-runner
        with:
          mode: stop
          os: ${{ env.OS }}
          wait-for-deregistry-timeout: 5
          github-token: ${{ secrets.GH_TOKEN}}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
